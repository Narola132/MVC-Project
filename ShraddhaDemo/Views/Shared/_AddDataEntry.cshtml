@model ShraddhaDemo.Models.UsersViewModel

@{
    Layout = null;
}

<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
      rel="stylesheet">

@using (Ajax.BeginForm("InsertUpdateDataEntry", "DemoResult", null,
    new AjaxOptions
    {
        OnSuccess = "UpdateDataEntry",
        OnFailure = "FailDataEntry",
        HttpMethod = "Post"
    }, new { id = "frmDataEntry" }))
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control datepickers", @id = "Dateofbirth" } })
                @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Joiningdate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Joiningdate, new { htmlAttributes = new { @class = "form-control", @id = "Joiningdate" } })
                @Html.ValidationMessageFor(model => model.Joiningdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button class="btn btn-primary btn-alt" type="submit" data-localize="Create">Submit</button>

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-9" style="color:green">
                @ViewBag.Message
            </div>
        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

<script>
    function UpdateDataEntry(res) {
        alert(res.Message);
        if (res != null && res.status == 1) {
            GetUpdatedResults();
            $("#frmDataEntry").trigger("reset");
        }
    }
    function FailDataEntry(res) {
        alert(res.Message);
    }
    function activaTab(tab) {
        $('.nav-tabs a[href="#' + tab + '"]').tab('show');
    };
    function GetUpdatedResults() {
        $.ajax({
            url: "/DemoResult/ShowResultList",
            type: 'GET',
            success: function (res) {
                $(".divShowResults").html(res);
                activaTab('Show_Results');
            }
        });
    };
</script>
